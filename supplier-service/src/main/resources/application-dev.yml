server:
  port: 9090

spring:
  application:
    name: product-service

  # ✅ PostgreSQL para producción/Docker
  datasource:
    url: jdbc:postgresql://product-db:5432/product
    username: ${DB_USERNAME:product}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  hikari:
    pool-name: HikariPool-ProductService
    maximum-pool-size: 10                         # -> "Maximum pool size"
    minimum-idle: 2                               # Hikari no tiene "min pool size" como tal; usa minimumIdle
    auto-commit: false                            # -> "Autocommit mode"
    transaction-isolation: TRANSACTION_READ_COMMITTED  # -> "Isolation level"
    # Opcionales útiles:
    connection-timeout: 30000
    idle-timeout: 600000
    max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true

# Configuración de paginación
app:
  cors:
    allowed-origin: "*"
  pagination:
    default-page: 0
    default-size: 10
    max-size: 100
    default-sort: createdAt
    default-direction: desc

# Eureka para microservicios
eureka:
  client:
    service-url:
      defaultZone: http://discovery-service:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: "*"

# Logging
logging:
  level:
    com.celotts.productservice: INFO
    com.netflix.eureka: WARN
    com.netflix.discovery: WARN