services:
  discovery-service:
    build:
      context: ../discovery-service
      dockerfile: Dockerfile
    container_name: discovery-service
    ports:
      - "${DISCOVERY_PORT:-8761}:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - JAVA_OPTS=${JAVA_OPTS}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: ${INTERVAL10s:-10s}
      timeout: ${TIMEOUT5s:-5s}
      retries: ${RETRIES3:-3}
      start_period: 30s
    networks:
      - inventory-network

  config-service:
    build:
      context: ../config-service
      dockerfile: Dockerfile
    container_name: config-service
    ports:
      - "${CONFIG_PORT:-7777}:${CONFIG_PORT:-7777}"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - JAVA_OPTS=${JAVA_OPTS}
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://${GIT_USERNAME}:${GIT_TOKEN}@github.com/celotts/config-repo.git
      - GIT_USERNAME=${GIT_USERNAME}
      - GIT_TOKEN=${GIT_TOKEN}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
    depends_on:
      discovery-service:
        condition: service_started  # üîÑ Cambiado de service_healthy a service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${CONFIG_PORT:-7777}/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped  # üÜï Agregado restart policy
    networks:
      - inventory-network

  product-db:
    image: postgres:16
    container_name: product-db
    ports:
      - "${PORT_5432:-5432}:5432"
    environment:
      POSTGRES_DB: ${PRODUCT_DB_NAME:-product}
      POSTGRES_USER: ${PRODUCT_DB_USERNAME:-product}
      POSTGRES_PASSWORD: ${PRODUCT_DB_PASSWORD:-product123}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PRODUCT_DB_USERNAME:-product}" ]
      interval: ${INTERVAL10s:-10s}
      timeout: ${TIMEOUT5s:-5s}
      retries: ${RETRIES5:-5}
      start_period: 30s
    networks:
      - inventory-network
    volumes:
      - product-data:/var/lib/postgresql/data
      - ./init-scripts/product/01-product-init.sql:/docker-entrypoint-initdb.d/01-product-init.sql:ro
      #- ./init-scripts/product-init.sql:/docker-entrypoint-initdb.d/product-init.sql:ro  # ‚úÖ NUEVA L√çNEA

  product-service:
    build:
      context: ../product-service
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "${PORT9090:-9090}:9090"
    environment:
      - SPRING_APPLICATION_NAME=product-service
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - JAVA_OPTS=${JAVA_OPTS}
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:${CONFIG_PORT:-7777}

      # Datasource / Driver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://product-db:5432/product
      - SPRING_DATASOURCE_USERNAME=product
      - SPRING_DATASOURCE_PASSWORD=product123
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver

      # Hikari (una vez, sin duplicados)
      - SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE=2
      - SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE=10
      - SPRING_DATASOURCE_HIKARI_AUTO_COMMIT=false
      - SPRING_DATASOURCE_HIKARI_TRANSACTION_ISOLATION=TRANSACTION_READ_COMMITTED
      - SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT=60000
      - SPRING_DATASOURCE_HIKARI_VALIDATION_TIMEOUT=30000

      # Eureka
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS=30
      - EUREKA_CLIENT_INSTANCEINFOREPLICATIONINTERVALSECONDS=30

      # Config Server (tolerancia a fallos)
      - SPRING_CLOUD_CONFIG_FAILFAST=false
      - SPRING_CLOUD_CONFIG_RETRY_MAXATTEMPTS=6
      - SPRING_CLOUD_CONFIG_RETRY_INITIALINTERVAL=3000

      # Paginaci√≥n
      - PAGINATION_DEFAULT_PAGE=${PAGINATION_DEFAULT_PAGE:-0}
      - PAGINATION_DEFAULT_SIZE=${PAGINATION_DEFAULT_SIZE:-10}
      - PAGINATION_MAX_SIZE=${PAGINATION_MAX_SIZE:-100}
      - PAGINATION_DEFAULT_SORT_BY=${PAGINATION_DEFAULT_SORT_BY:-createdAt}
      - PAGINATION_DEFAULT_SORT_DIR=${PAGINATION_DEFAULT_SORT_DIR:-desc}
      - PAGINATION_ALLOWED_SORT_FIELDS=${PAGINATION_ALLOWED_SORT_FIELDS:-createdAt,updatedAt,code,description,unitPrice,currentStock}

      # Actuator + logs diagn√≥stico
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,env,configprops,beans
      - MANAGEMENT_ENDPOINT_CONFIGPROPS_ENABLED=true
      - MANAGEMENT_ENDPOINT_ENV_ENABLED=true
      - MANAGEMENT_ENDPOINT_BEANS_ENABLED=true
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=ALWAYS
    depends_on:
      discovery-service:
        condition: service_started  # üîÑ Cambiado de service_healthy a service_started
      config-service:
        condition: service_started  # üîÑ Cambiado de service_healthy a service_started
      product-db:
        condition: service_healthy  # ‚úÖ Mantenemos healthy solo para la DB
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9090/actuator/health || exit 1" ]
      interval: 20s              # üîÑ Reducido de 30s
      timeout: 15s               # üîÑ Aumentado de 10s
      retries: 10                # üîÑ Aumentado de 5
      start_period: 90s          # üîÑ Aumentado de 60s para Podman
    restart: unless-stopped      # üÜï Agregado restart policy
    networks:
      - inventory-network

  api-gateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "${GATEWAY_PORT:-8090}:8090"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - JAVA_OPTS=${JAVA_OPTS}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka/
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-service:${CONFIG_PORT:-7777}
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED=true
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWERCASESERVICEID=true
      # üÜï Configuraciones adicionales para mejor tolerancia
      - SPRING_CLOUD_CONFIG_FAILFAST=false
      - SPRING_CLOUD_CONFIG_RETRY_MAXATTEMPTS=3
    depends_on:
      discovery-service:
        condition: service_started  # üîÑ Cambiado de service_healthy a service_started
      config-service:
        condition: service_started  # üîÑ Cambiado de service_healthy a service_started
      product-service:
        condition: service_started  # üîÑ Cambiado de service_healthy a service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8090/actuator/health || exit 1"]
      interval: 25s              # üîÑ Reducido de 30s
      timeout: 15s               # üîÑ Aumentado de 10s
      retries: 8                 # üîÑ Aumentado de 5
      start_period: 60s          # üîÑ Aumentado de 45s
    restart: unless-stopped      # üÜï Agregado restart policy
    networks:
      - inventory-network

networks:
  inventory-network:
    driver: bridge

volumes:
  product-data: