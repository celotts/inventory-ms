plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.celotts'
version = '0.0.1-SNAPSHOT'

jacoco {
	toolVersion = "0.8.10"
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.1")
}

dependencies {
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// PostgreSQL para producción
	runtimeOnly 'org.postgresql:postgresql'

	// ✅ H2 para tests - AGREGAMOS AMBAS LÍNEAS
	testImplementation 'com.h2database:h2'  // Para que el IDE pueda resolver
	testRuntimeOnly 'com.h2database:h2'     // Para runtime de tests

	// Validación
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Development
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Asegúrate de tener estas también
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

bootJar {
	archiveFileName = 'product-service-0.0.1-SNAPSHOT.jar'
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.defaultComponentModel=spring',
			'-Amapstruct.unmappedTargetPolicy=IGNORE'
	]
}
jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
		html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.10 // Por ejemplo: exige 80% cobertura
			}
		}
	}
}

test.finalizedBy jacocoTestCoverageVerification